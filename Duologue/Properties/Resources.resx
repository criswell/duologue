<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Boss_Moloch1" xml:space="preserve">
    <value>You may have defeated my minions,</value>
  </data>
  <data name="Boss_Moloch2" xml:space="preserve">
    <value>but you will not defeat me!</value>
  </data>
  <data name="Filename_GameOver" xml:space="preserve">
    <value>PlayerUI/game-over_en_US</value>
  </data>
  <data name="GameScreen_SurvivalWave" xml:space="preserve">
    <value>Survival Mode</value>
  </data>
  <data name="GameScreen_Wave" xml:space="preserve">
    <value>Wave {0}-{1}</value>
  </data>
  <data name="Intro_Copyright" xml:space="preserve">
    <value>Copyright © 2009 Funavision, Inc. All rights reserved.</value>
  </data>
  <data name="Intro_Legal1" xml:space="preserve">
    <value>Contains game assets released under Creative Commons and Microsoft Permissive Licenses.</value>
  </data>
  <data name="Intro_Legal2" xml:space="preserve">
    <value>Powered by the Mimicware Engine. See game credits for more details.</value>
  </data>
  <data name="Intro_Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="MainMenu_Achievements" xml:space="preserve">
    <value>Medal Display Case</value>
  </data>
  <data name="MainMenu_Credits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="MainMenu_Exit" xml:space="preserve">
    <value>Return to Arcade</value>
  </data>
  <data name="MainMenu_GameSelect_Back" xml:space="preserve">
    <value>Back to main menu</value>
  </data>
  <data name="MainMenu_GameSelect_Campaign" xml:space="preserve">
    <value>Play campaign mode</value>
  </data>
  <data name="MainMenu_GameSelect_InfiniteMode" xml:space="preserve">
    <value>Play infinite mode</value>
  </data>
  <data name="MainMenu_GameSelect_Survival" xml:space="preserve">
    <value>Play survival mode</value>
  </data>
  <data name="MainMenu_Play" xml:space="preserve">
    <value>Join the battle!</value>
  </data>
  <data name="MainMenu_PressStart" xml:space="preserve">
    <value>Press Start</value>
  </data>
  <data name="MedalCase_Locked" xml:space="preserve">
    <value>(Not yet earned)</value>
  </data>
  <data name="MedalCase_Potato" xml:space="preserve">
    <value>Potato+1</value>
  </data>
  <data name="MedalCase_Stats" xml:space="preserve">
    <value>Enemy types killed: {0}/{1}  Total enemies killed: {2}</value>
  </data>
  <data name="MedalCase_Title" xml:space="preserve">
    <value>Medal Display Case</value>
  </data>
  <data name="MedalCase_TrialMode" xml:space="preserve">
    <value>Purchase the full game to earn medals!</value>
  </data>
  <data name="Medal_Desc_BFF" xml:space="preserve">
    <value>Complete the campaign in co-op</value>
  </data>
  <data name="Medal_Desc_Experienced" xml:space="preserve">
    <value>Completed 50% of the campaign</value>
  </data>
  <data name="Medal_Desc_Exterminator" xml:space="preserve">
    <value>Killed every enemy type</value>
  </data>
  <data name="Medal_Desc_HeavyRoller" xml:space="preserve">
    <value>Rolled the score back to all zeros</value>
  </data>
  <data name="Medal_Desc_KeyParty" xml:space="preserve">
    <value>Play 50% of campaign in 4 player co-op</value>
  </data>
  <data name="Medal_Desc_Kilokillage" xml:space="preserve">
    <value>Killed 1000 enemies</value>
  </data>
  <data name="Medal_Desc_NoEndInSight" xml:space="preserve">
    <value>Passed wave 100 of Survival Mode</value>
  </data>
  <data name="Medal_Desc_Seriously" xml:space="preserve">
    <value>Killed 39,516 enemies</value>
  </data>
  <data name="Medal_Desc_TourOfDuty" xml:space="preserve">
    <value>Completed the campaign</value>
  </data>
  <data name="Medal_Desc_WetFeet" xml:space="preserve">
    <value>Completed 25% of the campaign</value>
  </data>
  <data name="Medal_Name_BFF" xml:space="preserve">
    <value>BFF</value>
  </data>
  <data name="Medal_Name_Experienced" xml:space="preserve">
    <value>Experienced</value>
  </data>
  <data name="Medal_Name_Exterminator" xml:space="preserve">
    <value>Exterminator</value>
  </data>
  <data name="Medal_Name_HeavyRoller" xml:space="preserve">
    <value>Rolled the score</value>
  </data>
  <data name="Medal_Name_KeyParty" xml:space="preserve">
    <value>Key party</value>
  </data>
  <data name="Medal_Name_Kilokillage" xml:space="preserve">
    <value>Kilokillage</value>
  </data>
  <data name="Medal_Name_NoEndInSight" xml:space="preserve">
    <value>No end in sight</value>
  </data>
  <data name="Medal_Name_Seriously" xml:space="preserve">
    <value>Seriously?</value>
  </data>
  <data name="Medal_Name_TourOfDuty" xml:space="preserve">
    <value>Tour of duty</value>
  </data>
  <data name="Medal_Name_WetFeet" xml:space="preserve">
    <value>Wet feet</value>
  </data>
  <data name="PauseScreen_ExitMainMenu" xml:space="preserve">
    <value>Return to Main Menu</value>
  </data>
  <data name="PauseScreen_GamePaused" xml:space="preserve">
    <value>Game Paused</value>
  </data>
  <data name="PauseScreen_MedalCase" xml:space="preserve">
    <value>Medal Display Case</value>
  </data>
  <data name="PauseScreen_ResumeGame" xml:space="preserve">
    <value>Resume the battle</value>
  </data>
  <data name="PauseScreen_WaveNum" xml:space="preserve">
    <value>Wave {0}-{1}.{2}</value>
  </data>
  <data name="PlayerSelect_ConnectController" xml:space="preserve">
    <value>Connect controller</value>
  </data>
  <data name="PlayerSelect_CountdownPressB" xml:space="preserve">
    <value>Press "B" to cancel</value>
  </data>
  <data name="PlayerSelect_MainText" xml:space="preserve">
    <value>Press "A" to join and "Start" to begin</value>
  </data>
  <data name="PlayerSelect_PressA" xml:space="preserve">
    <value>Press "A" to join</value>
  </data>
  <data name="PlayerSelect_PressStart" xml:space="preserve">
    <value>Press "Start" when ready</value>
  </data>
  <data name="ScoreUI_ExtraLife" xml:space="preserve">
    <value>Extra Life!</value>
  </data>
  <data name="ScoreUI_GameOver" xml:space="preserve">
    <value>Game Over</value>
  </data>
  <data name="ScoreUI_InfiniteMode_Lives" xml:space="preserve">
    <value>Deaths:</value>
  </data>
  <data name="ScoreUI_Lives" xml:space="preserve">
    <value>Lives:</value>
  </data>
  <data name="Tip001" xml:space="preserve">
    <value>Tip: To kill Spawners, shoot them as they beam in reinforcements.</value>
  </data>
  <data name="Tip002" xml:space="preserve">
    <value>Tip: Some enemies can change their color. Be sure to watch for it.</value>
  </data>
  <data name="Tip003" xml:space="preserve">
    <value>Tip: If an enemy does not have eyes, light will have no effect on them.</value>
  </data>
  <data name="Tip004" xml:space="preserve">
    <value>Tip: Off screen enemies have arrows that point to them.</value>
  </data>
  <data name="Tip005" xml:space="preserve">
    <value>Tip: Shooting enemies to the rhythm boosts your score.</value>
  </data>
  <data name="Tip006" xml:space="preserve">
    <value>Tip: The intensity of the background music reflects your performance.</value>
  </data>
  <data name="Tip007" xml:space="preserve">
    <value>Tip: Enemies that are grey are immune to attack.</value>
  </data>
  <data name="Tip008" xml:space="preserve">
    <value>Tip: Don't stand between two Unclean Rots.</value>
  </data>
  <data name="Tip009" xml:space="preserve">
    <value>Tip: Sometimes it is best to not kill the leader first.</value>
  </data>
  <data name="Tip010" xml:space="preserve">
    <value>Tip: Remember to use your light to keep enemies at bay.</value>
  </data>
  <data name="Tutorial_1" xml:space="preserve">
    <value>Use the Left Stick to move and the Right Stick to fire.</value>
  </data>
  <data name="Tutorial_2" xml:space="preserve">
    <value>Use the Left and Right Triggers to swap cannon and light colors.</value>
  </data>
  <data name="Tutorial_3" xml:space="preserve">
    <value>Use the light to ward off opposite colored enemies.</value>
  </data>
  <data name="Tutorial_InfiniteMode" xml:space="preserve">
    <value>Play the game with the least amount of deaths!</value>
  </data>
</root>